version: 2.1
orbs:
  github-release: haskell-works/github-release@1.3.3
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.3.9-node-browsers

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/mysql:9.4

    working_directory: ~/wp-avorg-plugin

    steps:
      - add_ssh_keys:
          fingerprints:
            - "da:93:9d:ad:27:17:f0:93:58:5b:a9:fa:51:45:7e:a9"

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v6-composer-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v6-composer-

      - run:
          name: Install dependencies
          command: composer install --no-dev --no-interaction

      - run:
          name: Compress build
          command: |
            sudo mkdir /build
            sudo zip -r /build/wp-avorg-plugin .

      - store_artifacts:
          path: /build/wp-avorg-plugin.zip

      - run:
          name: Upload build to surge.sh
          command: |
            echo "wp-avorg-plugin-${CIRCLE_BRANCH}.surge.sh"
            npm install surge
            ./node_modules/.bin/surge --project /build --domain "wp-avorg-plugin-${CIRCLE_BRANCH}.surge.sh"
          filters:
            branches:
              only:
                - master
                - dev

      - run:
          name: Deploy build to staging server
          command: |
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            php wp-cli.phar --info

      - save_cache:
          paths:
            - ./vendor
          key: v6-composer-{{ checksum "composer.lock" }}

      - run:
          name: PHPUnit
          command: |
            curl -L -o ~/phpunit https://phar.phpunit.de/phpunit-8.phar
            chmod +x ~/phpunit
            mkdir -p ~/phpunit_results
            ~/phpunit --log-junit ~/phpunit_results/junit.xml

      - store_test_results:
          path: ~/phpunit_results

      - store_artifacts:
          path: ~/phpunit_results
workflow:
  my-github-release:
    jobs:
      - github-release/release:
          tag: v$CIRCLE_BUILD_NUM
          title: Release v$CIRCLE_BUILD_NUM
          artefacts-folder: /build
          filters:
            branches:
              only: master